<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搬空阿虚同学</title>
      <link href="/posts/8782.html"/>
      <url>/posts/8782.html</url>
      
        <content type="html"><![CDATA[<h1 id="搬空阿虚同学"><a href="#搬空阿虚同学" class="headerlink" title="搬空阿虚同学"></a>搬空阿虚同学</h1>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《数据结构与程序设计》第一次作业笔记————C语言基础复习(1)</title>
      <link href="/posts/18257.html"/>
      <url>/posts/18257.html</url>
      
        <content type="html"><![CDATA[<h1 id="《数据结构与程序设计》第一次作业笔记————C语言基础复习-1"><a href="#《数据结构与程序设计》第一次作业笔记————C语言基础复习-1" class="headerlink" title="《数据结构与程序设计》第一次作业笔记————C语言基础复习(1)"></a>《数据结构与程序设计》第一次作业笔记————C语言基础复习(1)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="填空"><a href="#填空" class="headerlink" title="填空"></a>填空</h3><p>4.下面的函数invert的功能是将一个字符串的内容颠倒过来。请将函数补充完整。(所有答案填写在此空内，答案间以空格隔开)<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">invert</span><span class="params">(<span class="type">char</span> str[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, (填空<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="built_in">strlen</span>(str)(填空<span class="number">2</span>); i &lt; j; i++, j–-)</span><br><span class="line">    &#123;</span><br><span class="line">        k = str[i];</span><br><span class="line">        str[i] = str[j];</span><br><span class="line">        str[j] = k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>答案：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【正确答案: k -1】(？应为char k)</span><br><span class="line"> 解析：从头尾开始遍历即可，下标：头0，尾长度-1</span><br></pre></td></tr></table></figure><br>6.函数index(char s[],char t[])检查字符串s中是否包含字符串t，若包含，则返回t在s中的开始位置(下标值)，否则返回-1。请将函数补充完整。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">index</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> t[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; s[i] !=<span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i, k = <span class="number">0</span>; 填空<span class="number">1</span>______ &amp;&amp; s[j] == t[k]; j++, k++)</span><br><span class="line">            ;</span><br><span class="line">        <span class="keyword">if</span> (填空<span class="number">2</span>_______)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>答案：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">正确答案:</span><br><span class="line">  t[k]!=&#x27;\0&#x27; t[k]==&#x27;\0&#x27; 或 </span><br><span class="line">  s[j]!=&#x27;\0&#x27; t[k]==&#x27;\0&#x27; 或 </span><br><span class="line">  t[k]!=0 t[k]==0 或 </span><br><span class="line">  s[j]!=0 t[k]==0 或 </span><br><span class="line">  k&lt;strlen(t) k==strlen(t) 或 </span><br><span class="line">  s[j]!=&#x27;\0&#x27;&amp;&amp;t[k]!=&#x27;\0&#x27; t[k]= =&#x27;\0&#x27; 或 </span><br><span class="line">  t[k]!=&#x27;\0&#x27; k==strlen(t) 或 </span><br><span class="line">  s[j]!=&#x27;\0&#x27; k==strlen(t) 或 </span><br><span class="line">  s[j]!=&#x27;\0&#x27;&amp;&amp;t[k]!=&#x27;\0&#x27; k= =strlen(t) 或 </span><br><span class="line">  t[k]!=0 k==strlen(t) 或 </span><br><span class="line">  s[j]!=0 k==strlen(t) 或 </span><br><span class="line">  k&lt;strlen(t) t[k]==&#x27;\0&#x27; 或 </span><br><span class="line">  k&lt;strlen(t) t[k]==0(所有答案填写在此空内，答案间以空格隔开)</span><br><span class="line">解析：第二层for循环后的分号意思是不断执行for循环，但其中没有循环体内容（实际上j++, k++就是循环内容）。填空1中的for循环是在完成匹配的目的，所以匹配得以进行的两个条件分别是匹配串t没有到末尾，以及s和t的匹配位置相同。填空2则是判断是否匹配成功，如果匹配串t匹配到末尾，则表示匹配成功。</span><br></pre></td></tr></table></figure><br>7.函数squeez(char s[],char c)的功能是删除字符串s中所出现的与变量c相同的字符。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">squeez</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = j = <span class="number">0</span>; 填空<span class="number">1</span>______; i++)</span><br><span class="line">        <span class="keyword">if</span> (s[i] != c)</span><br><span class="line">            填空<span class="number">2</span>______;</span><br><span class="line">    s[j] =’\<span class="number">0</span>’;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>答案：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【正确答案: s[i]!=&#x27;\0&#x27; s[j++]=s[i] 或 i&lt;strlen(s) s[j++]=s[i]】</span><br><span class="line">解析：这个函数实现的很妙，真的很妙。首先我们知道整个函数的操作都是在s上进行的，而且j&lt;=i的（当没有相同字符的时候两者相等），所以是s[j]=&#x27;\0&#x27;这部操作就是把s[j]作为s的结尾，由于要遍历整个s，所以填空1就是s[i]!=&#x27;\0&#x27;，由于当不与字符c相同时要实时更新s的结尾，所以s[j++]=s[i]。</span><br></pre></td></tr></table></figure></p><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><p>9.若有说明: char *language[] = {“FORTRAN”, “BASIC”, “PASCAL”, “JAVA”, “C”};则以下不正确的叙述是</p><p>(A) <em>(language+2) 表示字符串”PASCAL”的首地址<br>(B) </em>language[2]的值是字母P<br>(C) language是一个字符型指针数组,它包含5个元素,每个元素都是一个指向字符串的指针<br>(D) language包含5个相同长度的数组<br>答案：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【正确答案: d】</span><br><span class="line"> 解析：答案不难选出来，但是注意AB的区别，language[2]=*(language+2)</span><br></pre></td></tr></table></figure><br>补充：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *a [] = &#123;<span class="string">&quot;China&quot;</span>,<span class="string">&quot;French&quot;</span>,<span class="string">&quot;America&quot;</span>,<span class="string">&quot;German&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组所在地址:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p \n&quot;</span>,a); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中第一个元素所在，即数组地址:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p \n&quot;</span>,&amp;a[<span class="number">0</span>]); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中元素（指针所指地址）:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p %p %p %p\n&quot;</span>,a[<span class="number">0</span>],a[<span class="number">1</span>],a[<span class="number">2</span>],a[<span class="number">3</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中第一个元素（指针）所指地址:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p \n&quot;</span>,a[<span class="number">0</span>]); </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中第一个元素（指针）所指地址中存放的元素（只是字符串的第一个字符）:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c \n&quot;</span>,*a[<span class="number">0</span>]); </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组地址取值（第一个元素，即第一个指针地址）对应的字符串:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s \n&quot;</span>,*a); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组地址移位取值（第二个元素，即第二个指针地址）对应的字符串:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s \n&quot;</span>,*(a+<span class="number">1</span>)); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组第一个元素（指针）所指位置上对应的字符串:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s \n&quot;</span>,a[<span class="number">0</span>]); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组第一个元素（指针）所指位置上对应的字符串中第一个字符:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c \n&quot;</span>,a[<span class="number">0</span>][<span class="number">0</span>]); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组第二个元素（指针）所指位置上对应的字符串中第二个字符:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c \n&quot;</span>,a[<span class="number">1</span>][<span class="number">1</span>]); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Output:<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">数组所在地址:000000392efffa00 </span><br><span class="line">数组中第一个元素所在，即数组地址:000000392efffa00 </span><br><span class="line">数组中元素（指针所指地址）:00007ff6ad86b050 00007ff6ad86b056 00007ff6ad86b05d 00007ff6ad86b065</span><br><span class="line">数组中第一个元素（指针）所指地址:00007ff6ad86b050 </span><br><span class="line">数组中第一个元素（指针）所指地址中存放的元素（只是字符串的第一个字符）:C </span><br><span class="line">数组地址取值（第一个元素，即第一个指针地址）对应的字符串:China </span><br><span class="line">数组地址移位取值（第二个元素，即第二个指针地址）对应的字符串:French </span><br><span class="line">数组第一个元素（指针）所指位置上对应的字符串:China </span><br><span class="line">数组第一个元素（指针）所指位置上对应的字符串中第一个字符:C </span><br><span class="line">数组第二个元素（指针）所指位置上对应的字符串中第二个字符:r </span><br></pre></td></tr></table></figure></p><h3 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h3><p>2.表达式计算</p><p>(未完待续)</p>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最浪漫的告白——少女们的飞空恋歌</title>
      <link href="/posts/15023.html"/>
      <url>/posts/15023.html</url>
      
        <content type="html"><![CDATA[<p><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=480423879&&page=1&as_wide=1&high_quality=1&danmaku=0"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><br>（未完待续）</p>]]></content>
      
      
      <categories>
          
          <category> 游戏感想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Galgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息大类程序设计基础未覆盖内容</title>
      <link href="/posts/2412.html"/>
      <url>/posts/2412.html</url>
      
        <content type="html"><![CDATA[<h1 id="信息大类-程序设计基础未覆盖内容"><a href="#信息大类-程序设计基础未覆盖内容" class="headerlink" title="信息大类-程序设计基础未覆盖内容"></a>信息大类-程序设计基础未覆盖内容</h1><p>Author：黄金发の魔理沙</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，航专程设（信息类）是8次课结课，进度也仅仅是“讲”到指针结束。</p><p>而事实上：翻开任意一本C语言初级教程类书籍<sup><a href="#fn_1" id="reffn_1">1</a></sup>，指针仅仅位于全书的70%左右位置，而剩余30%部分，大致包括以下内容：</p><ul><li>结构体</li><li>文件I/O</li><li>简单DS</li><li>预处理器和库</li><li>存储类别</li><li>实例分析与设计</li></ul><p>而就我所知，其他大学（无论该校是否为大类招生）的大一上程序设计基础课程，无一不是学分高，占比重，体量相对完整的，要么就是直接以C++为基础语言讲授面向过程部分，后续大一下学期直接衔接cpp的面向对象部分。</p><p>因此，出于完备性（强迫症）的考虑，有必要抽出时间把剩余内容学习完毕。个人推荐航专信息类学生在寒假学完这些内容（虽然我自己拖到开学两周后（2023.3）才开始着手弄）</p><p>另外强烈推荐在程设期末考试之前把结构体学完并掌握基础用法，因为我自己在期末考试时遇到的排序题（先根据一个属性降序，再根据一个属性升序）用结构体可以轻松解决，但我当时不会（悲），在考场上试图现场自学结构体失败，这题耗了一段时间也未能攻克，直接导致最后总评连90都没上（太菜了）（不过才两学分，感觉不如习概思修）</p><p>写作本文时笔者刚刚开学两周，正在学习信息类大一下的《数据结构与程序设计》课程。由于Data Structure（DS）极其重要且较有难度，有必要在前几周的缓冲期好好预习）复习并补全程设内容。前几周的作业（DS祖传题目）也有相当一部分是用来练手，复习的。本文即为上述航专程设未覆盖内容以及程设重难点、易出错内容的个人学习笔记，供预习及复习使用。</p><h2 id="指针补充内容"><a href="#指针补充内容" class="headerlink" title="指针补充内容"></a>指针补充内容</h2><h3 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h3><ul><li>C语言中功能最强的机制</li><li>易出错，较复杂</li><li>灵活性强</li><li>大一上程设只需要学会使用qsort（乐）</li></ul><h3 id="指针的初始化及赋值"><a href="#指针的初始化及赋值" class="headerlink" title="指针的初始化及赋值"></a>指针的初始化及赋值</h3><ul><li>在＜stdio.h＞中定义宏表示空指针：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NULL ((void *)0)</span></span><br></pre></td></tr></table></figure></li><li>数组名作为表达式＝指向首元素的指针</li><li>一些类型可以隐式类型转换</li><li>char *p可作字符串用（同字符数组），但不能向野指针中scanf字符串</li></ul><h3 id="指针作为函数参数"><a href="#指针作为函数参数" class="headerlink" title="指针作为函数参数"></a>指针作为函数参数</h3><ul><li>传入指针，在函数内部通过间接访问的方式，改变函数外局部变量的值，达到交换变量内容和模拟多返回值等功能</li><li>数组作为函数形式参数，实际上传入的是数组首元素地址，而非各个元素的值，所以操作该形参（指针）可以操作实际数数组。但是不能在函数内部用sizeof（形参）获取原数组所占用的内存空间，而只能返回指针本身占用的空间</li><li>就函数而言，数组的长度是无关紧要的，C语言不会对形式参数中的数组长度执行边界检查，一般将长度作为另一个参数传入</li><li>形参的声明方式有两种相互等价的表述，直接传指针更常见</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">example</span><span class="params">(<span class="type">char</span> parameter1[],<span class="type">int</span> * parameter2 ,<span class="type">int</span> len1,<span class="type">int</span> len2)</span>&#123;&#125;</span><br><span class="line">     <span class="comment">//形参的两种等价写法，传入首元素地址和长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">char</span> argument1[<span class="number">10</span>];</span><br><span class="line">  <span class="type">int</span> argument2[<span class="number">10</span>];</span><br><span class="line">  <span class="type">int</span> a＝example（argument1，argument2，<span class="number">10</span>，<span class="number">10</span>）；</span><br><span class="line">    <span class="comment">//调用时传入数组名即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="返回值为指针的函数"><a href="#返回值为指针的函数" class="headerlink" title="返回值为指针的函数"></a>返回值为指针的函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *<span class="title function_">strcpy</span><span class="params">(<span class="type">char</span> *dest ,<span class="type">char</span> *src)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> *a;</span><br><span class="line"><span class="comment">//常量指针：指针指向的内容只读，但指针指向可以修改</span></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">strlen</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *_Str)</span>;</span><br><span class="line"><span class="comment">//多用于函数参数，表示指针指向的内容不能修改，一旦误操作修改，会在编译阶段就报错</span></span><br><span class="line"><span class="type">int</span> *<span class="type">const</span> a;<span class="comment">//指针常量：不能更改指针指向</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> a;<span class="comment">//都不能修改</span></span><br></pre></td></tr></table></figure><h3 id="指针运算"><a href="#指针运算" class="headerlink" title="指针运算"></a>指针运算</h3><ul><li>p[n]等价于*(p+n)，&amp;p[n]等价于(p+n)，其中n为偏移量</li><li>a[0]为最低地址端，指针比较</li><li>指针之间只能相减不能相加，注意类型</li></ul><h3 id="指针的强制类型转换"><a href="#指针的强制类型转换" class="headerlink" title="指针的强制类型转换"></a>指针的强制类型转换</h3><ul><li>指针可以强制类型转换，只改变指针的解释方式</li><li>任何指针可以强制转为原始指针void<em>，指向原始内存单元而不知解释方式（因此void</em>不能解引用，必须强制转换），随后再将它赋值给其他指针</li><li>malloc可以申请堆空间内存</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">memcpy</span><span class="params">(<span class="type">void</span> *dest ,<span class="type">const</span> <span class="type">void</span> *src ,<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> n)</span>;</span><br><span class="line"><span class="comment">//只需要告知从哪个地址开始，复制多少字节数据，复制到哪里即可</span></span><br><span class="line"><span class="type">void</span> *<span class="title function_">malloc</span><span class="params">(<span class="type">size_t</span> _Size)</span>;<span class="comment">//malloc原型</span></span><br><span class="line"><span class="comment">//申请一片内存空间，共size可用个字节，返回一个指向首地址的void*</span></span><br><span class="line"><span class="type">int</span> *a=(<span class="type">int</span> *)*<span class="built_in">malloc</span>(<span class="number">4000</span>*<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"><span class="comment">//现在a指向一个大小为4000int的内存空间</span></span><br><span class="line">   a[<span class="number">10</span>]=<span class="number">1</span>;<span class="comment">//*(a+10)=1</span></span><br><span class="line">   <span class="built_in">free</span>(a);</span><br><span class="line">   a=<span class="literal">NULL</span>;<span class="comment">//释放申请的堆空间并且置空指针，防止之后误操作</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组指针"><a href="#数组指针" class="headerlink" title="数组指针"></a>数组指针</h3><p>(未完待续)</p><blockquote id="fn_1"><sup>1</sup>. e.g. 苏小红等. C语言程序设计（第四版）.<br/>Stephen Prata. C Primer Plus .<br/>宋友等. C语言程序设计————原理与实践<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次看板娘折腾经历</title>
      <link href="/posts/34975.html"/>
      <url>/posts/34975.html</url>
      
        <content type="html"><![CDATA[<!-----title: 文章标题date: 创建日期updated: 更新日期cover: 文章封面description: 文章描述swiper_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前-----><p>（未完待续）<br>最终效果：如左下，点击魔理沙会有动作反应，共计4/5个动作（可能因网络原因加载不出）<br>模型作者：北航校友<a href="https://space.bilibili.com/1283920">1726 SR</a>，莎厨感谢有你！<br>插件支持：</p>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
          <category> 奇妙经历 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Live2D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>友人帐</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/comments/index.html"/>
      <url>/comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>记录</title>
      <link href="/log/index.html"/>
      <url>/log/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalendar容器 --><div id="gitZone"></div><h1 id="成长记录"><a href="#成长记录" class="headerlink" title="成长记录"></a>成长记录</h1><h1 id="填坑计划"><a href="#填坑计划" class="headerlink" title="填坑计划"></a>填坑计划</h1><h1 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h1><h2 id="2023-03-03"><a href="#2023-03-03" class="headerlink" title="2023-03-03"></a>2023-03-03</h2><ol><li>路过图床挂了，不让传ACG图片（这太谔谔了！）改用github自建图床，图片地址全部更换一遍</li><li>挂绳图片更换为亚托莉（by ）</li></ol><h2 id="2023-02-28"><a href="#2023-02-28" class="headerlink" title="2023-02-28"></a>2023-02-28</h2><ol><li>创建开发日志</li><li>更新“友人帐”页面中技术支持和友情链接</li><li>更新gitcalendar配色为一系列粉红色</li></ol><h2 id="2023-02-27"><a href="#2023-02-27" class="headerlink" title="2023-02-27"></a>2023-02-27</h2><ol><li>添加页脚，包括“记忆”，“猜你想看”（尚未完善具体页面），“推荐友链”，运行时间，旅行者1号计时，徽标</li><li>更改页面标题和副标题为黑色</li><li>添加首页副标题及其模拟输入滚动效果</li></ol>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
